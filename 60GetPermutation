class Solution {
public:
    string getPermutation(int n, int k) {
        string res;
        vector<int> str;
        for(int i=1; i<=n; ++i) {
            str.push_back(i);
        }
        dfs(res,str,n,k);
        return res;
    }
    
    void dfs(string& res, vector<int>& str,int n,int k) {
        if(str.empty())
            return;
        int step=jiecheng(n-1), count=0, s=step;
        while(k>s) {
            s+=step;
            ++count;
        }
        res+=to_string(str[count]);
        str.erase(str.begin()+count);
        dfs(res, str, n-1, k-count*step);
    }
    
    int jiecheng(int n) {
        if(n<=1)
            return 1;
        return n* jiecheng(n-1);
    }
};
