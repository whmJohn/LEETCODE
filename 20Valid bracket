class Solution {
public:
    bool isValid(string s) {
        stack<char> temp;
        if (s == "") { //空字符串的情况
            return true;
        }
        int size = s.size();
        if (size % 2 != 0) { //判断括号个数是否为偶数，否则返回false
            return false;
        }
        for (int i = 0; i < size; i++) {
            if (s[i] == '(') {
                temp.push(s[i]);
            }
            else if (s[i] == '[') {
                temp.push(s[i]);
            }
            else if (s[i] == '{') {
                temp.push(s[i]);
            }
            else if (s[i] == ')') {
                if (temp.empty()) { //如果此前字符栈为空，那么直接将该括号加入到栈中，否则进行比较，看是否匹配
                    temp.push(s[i]);
                }
                else {
                    char temp2 = temp.top();
                    if (temp2 == '(') {
                        temp.pop();
                    }
                    else
                        temp.push(s[i]);
                }
            }
            else if (s[i] == ']') {
                if (temp.empty()) {
                    temp.push(s[i]);
                }
                else {
                    char temp2 = temp.top();
                    if (temp2 == '[') {
                        temp.pop();
                    }
                    else
                        temp.push(s[i]);
                }
            }
            else if (s[i] == '}') {
                if (temp.empty()) {
                    temp.push(s[i]);
                }
                else {
                    char temp2 = temp.top();
                    if (temp2 == '{') {
                        temp.pop();
                    }
                    else
                        temp.push(s[i]);
                }
            }
        }
        if (temp.size() == 0) {
            return true;
        }
        else
            return false;
    }
};
