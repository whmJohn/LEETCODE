class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int size = lists.size();
        if (size == 0) {
            return NULL;
        }
        ListNode* res = lists[0];
        ListNode* l1;
        ListNode* l2;
        ListNode* lala; //记录最开始的头节点
        for (int i = 1; i < size; i++) {
            l1 = res;
            l2 = lists[i];
            if (l1 == NULL) {
                res = l2;
                continue;
            }
            else if (l2 == NULL){
                res = l1;
                continue;
            }
            if (l1->val <= l2->val) {
                res = l1;
                lala = res;
                l1 = l1->next;
            }
            else {
                res = l2;
                lala = res;
                l2 = l2->next;
            }
            while (l1 != NULL || l2 != NULL) {
                if (l1 == NULL) { //若两节点到头了，直接接上另外一个节点，下同
                    res->next = l2;
                    break;
                }
                else if (l2 == NULL) {
                    res->next = l1;
                    break;
                }
                else {
                    if (l1->val <= l2->val) {
                        res->next = l1;
                        res = res->next;
                        l1 = l1->next;
                    }
                    else {
                        res->next = l2;
                        res = res->next;
                        l2 = l2->next;
                    }
                }
            }
            res = lala;
        }
        return res;
    }
};
